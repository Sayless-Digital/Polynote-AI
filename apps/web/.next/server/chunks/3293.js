"use strict";exports.id=3293,exports.ids=[3293],exports.modules={36690:(a,b,c)=>{c.d(b,{P:()=>f});var d=c(3927),e=c(83939),f=(0,e.K2)((a,b,c,f)=>{a.attr("class",c);let{width:i,height:j,x:k,y:l}=g(a,b);(0,d.a$)(a,j,i,f);let m=h(k,l,i,j,b);a.attr("viewBox",m),e.Rm.debug(`viewBox configured: ${m} with padding: ${b}`)},"setupViewPortForSVG"),g=(0,e.K2)((a,b)=>{let c=a.node()?.getBBox()||{width:0,height:0,x:0,y:0};return{width:c.width+2*b,height:c.height+2*b,x:c.x,y:c.y}},"calculateDimensionsWithPadding"),h=(0,e.K2)((a,b,c,d,e)=>`${a-e} ${b-e} ${c} ${d}`,"createViewBox")},60277:(a,b,c)=>{function d(a,b){a.accDescr&&b.setAccDescription?.(a.accDescr),a.accTitle&&b.setAccTitle?.(a.accTitle),a.title&&b.setDiagramTitle?.(a.title)}c.d(b,{S:()=>d}),(0,c(83939).K2)(d,"populateCommonDb")},93293:(a,b,c)=>{c.d(b,{diagram:()=>u});var d=c(58728),e=c(36690),f=c(59685),g=c(60277),h=c(53092),i=c(3927),j=c(83939),k=c(28777),l=c(75645),m=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=i.SV,this.getAccTitle=i.iN,this.setDiagramTitle=i.ke,this.getDiagramTitle=i.ab,this.getAccDescription=i.m7,this.setAccDescription=i.EI}static{(0,j.K2)(this,"TreeMapDB")}getNodes(){return this.nodes}getConfig(){let a=i.UI,b=(0,i.zj)();return(0,h.$t)({...a.treemap,...b.treemap??{}})}addNode(a,b){this.nodes.push(a),this.levels.set(a,b),0===b&&(this.outerNodes.push(a),this.root??=a)}getRoot(){return{name:"",children:this.outerNodes}}addClass(a,b){let c=this.classes.get(a)??{id:a,styles:[],textStyles:[]},d=b.replace(/\\,/g,"\xa7\xa7\xa7").replace(/,/g,";").replace(/§§§/g,",").split(";");d&&d.forEach(a=>{(0,f.KX)(a)&&(c?.textStyles?c.textStyles.push(a):c.textStyles=[a]),c?.styles?c.styles.push(a):c.styles=[a]}),this.classes.set(a,c)}getClasses(){return this.classes}getStylesForClass(a){return this.classes.get(a)?.styles??[]}clear(){(0,i.IU)(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}};function n(a){if(!a.length)return[];let b=[],c=[];return a.forEach(a=>{let d={name:a.name,children:"Leaf"===a.type?void 0:[]};for(d.classSelector=a?.classSelector,a?.cssCompiledStyles&&(d.cssCompiledStyles=[a.cssCompiledStyles]),"Leaf"===a.type&&void 0!==a.value&&(d.value=a.value);c.length>0&&c[c.length-1].level>=a.level;)c.pop();if(0===c.length)b.push(d);else{let a=c[c.length-1].node;a.children?a.children.push(d):a.children=[d]}"Leaf"!==a.type&&c.push({node:d,level:a.level})}),b}(0,j.K2)(n,"buildHierarchy");var o=(0,j.K2)((a,b)=>{(0,g.S)(a,b);let c=[];for(let c of a.TreemapRows??[])"ClassDefStatement"===c.$type&&b.addClass(c.className??"",c.styleText??"");for(let d of a.TreemapRows??[]){let a=d.item;if(!a)continue;let e=d.indent?parseInt(d.indent):0,f=p(a),g=a.classSelector?b.getStylesForClass(a.classSelector):[],h=g.length>0?g.join(";"):void 0,i={level:e,name:f,type:a.$type,value:a.value,classSelector:a.classSelector,cssCompiledStyles:h};c.push(i)}let d=n(c),e=(0,j.K2)((a,c)=>{for(let d of a)b.addNode(d,c),d.children&&d.children.length>0&&e(d.children,c+1)},"addNodesRecursively");e(d,0)},"populate"),p=(0,j.K2)(a=>a.name?String(a.name):"","getItemName"),q={parser:{yy:void 0},parse:(0,j.K2)(async a=>{try{let b=k.qg,c=await b("treemap",a);j.Rm.debug("Treemap AST:",c);let d=q.parser?.yy;if(!(d instanceof m))throw Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");o(c,d)}catch(a){throw j.Rm.error("Error parsing treemap:",a),a}},"parse")},r=(0,j.K2)((a,b,c,g)=>{let h,k=g.db,m=k.getConfig(),n=m.padding??10,o=k.getDiagramTitle(),p=k.getRoot(),{themeVariables:q}=(0,i.zj)();if(!p)return;let r=30*!!o,s=(0,d.D)(b),t=m.nodeWidth?10*m.nodeWidth:960,u=m.nodeHeight?10*m.nodeHeight:500,v=u+r;s.attr("viewBox",`0 0 ${t} ${v}`),(0,i.a$)(s,v,t,m.useMaxWidth);try{let a=m.valueFormat||",";if("$0,0"===a)h=(0,j.K2)(a=>"$"+(0,l.GPZ)(",")(a),"valueFormat");else if(a.startsWith("$")&&a.includes(",")){let b=/\.\d+/.exec(a),c=b?b[0]:"";h=(0,j.K2)(a=>"$"+(0,l.GPZ)(","+c)(a),"valueFormat")}else if(a.startsWith("$")){let b=a.substring(1);h=(0,j.K2)(a=>"$"+(0,l.GPZ)(b||"")(a),"valueFormat")}else h=(0,l.GPZ)(a)}catch(a){j.Rm.error("Error creating format function:",a),h=(0,l.GPZ)(",")}let w=(0,l.UMr)().range(["transparent",q.cScale0,q.cScale1,q.cScale2,q.cScale3,q.cScale4,q.cScale5,q.cScale6,q.cScale7,q.cScale8,q.cScale9,q.cScale10,q.cScale11]),x=(0,l.UMr)().range(["transparent",q.cScalePeer0,q.cScalePeer1,q.cScalePeer2,q.cScalePeer3,q.cScalePeer4,q.cScalePeer5,q.cScalePeer6,q.cScalePeer7,q.cScalePeer8,q.cScalePeer9,q.cScalePeer10,q.cScalePeer11]),y=(0,l.UMr)().range([q.cScaleLabel0,q.cScaleLabel1,q.cScaleLabel2,q.cScaleLabel3,q.cScaleLabel4,q.cScaleLabel5,q.cScaleLabel6,q.cScaleLabel7,q.cScaleLabel8,q.cScaleLabel9,q.cScaleLabel10,q.cScaleLabel11]);o&&s.append("text").attr("x",t/2).attr("y",r/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(o);let z=s.append("g").attr("transform",`translate(0, ${r})`).attr("class","treemapContainer"),A=(0,l.Sk5)(p).sum(a=>a.value??0).sort((a,b)=>(b.value??0)-(a.value??0)),B=(0,l.hkb)().size([t,u]).paddingTop(a=>a.children&&a.children.length>0?35:0).paddingInner(n).paddingLeft(a=>a.children&&a.children.length>0?10:0).paddingRight(a=>a.children&&a.children.length>0?10:0).paddingBottom(a=>a.children&&a.children.length>0?10:0).round(!0)(A),C=B.descendants().filter(a=>a.children&&a.children.length>0),D=z.selectAll(".treemapSection").data(C).enter().append("g").attr("class","treemapSection").attr("transform",a=>`translate(${a.x0},${a.y0})`);D.append("rect").attr("width",a=>a.x1-a.x0).attr("height",25).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",a=>0===a.depth?"display: none;":""),D.append("clipPath").attr("id",(a,c)=>`clip-section-${b}-${c}`).append("rect").attr("width",a=>Math.max(0,a.x1-a.x0-12)).attr("height",25),D.append("rect").attr("width",a=>a.x1-a.x0).attr("height",a=>a.y1-a.y0).attr("class",(a,b)=>`treemapSection section${b}`).attr("fill",a=>w(a.data.name)).attr("fill-opacity",.6).attr("stroke",a=>x(a.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",a=>{if(0===a.depth)return"display: none;";let b=(0,f.GX)({cssCompiledStyles:a.data.cssCompiledStyles});return b.nodeStyles+";"+b.borderStyles.join(";")}),D.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",12.5).attr("dominant-baseline","middle").text(a=>0===a.depth?"":a.data.name).attr("font-weight","bold").attr("style",a=>0===a.depth?"display: none;":"dominant-baseline: middle; font-size: 12px; fill:"+y(a.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,f.GX)({cssCompiledStyles:a.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).each(function(a){if(0===a.depth)return;let b=(0,l.Ltv)(this),c=a.data.name;b.text(c);let d=a.x1-a.x0,e=Math.max(15,!1!==m.showValues&&a.value?d-10-30-10-6:d-6-6),f=b.node();if(f.getComputedTextLength()>e){let a=c;for(;a.length>0;){if(0===(a=c.substring(0,a.length-1)).length){b.text("..."),f.getComputedTextLength()>e&&b.text("");break}if(b.text(a+"..."),f.getComputedTextLength()<=e)break}}}),!1!==m.showValues&&D.append("text").attr("class","treemapSectionValue").attr("x",a=>a.x1-a.x0-10).attr("y",12.5).attr("text-anchor","end").attr("dominant-baseline","middle").text(a=>a.value?h(a.value):"").attr("font-style","italic").attr("style",a=>0===a.depth?"display: none;":"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+y(a.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,f.GX)({cssCompiledStyles:a.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"));let E=B.leaves(),F=z.selectAll(".treemapLeafGroup").data(E).enter().append("g").attr("class",(a,b)=>`treemapNode treemapLeafGroup leaf${b}${a.data.classSelector?` ${a.data.classSelector}`:""}x`).attr("transform",a=>`translate(${a.x0},${a.y0})`);F.append("rect").attr("width",a=>a.x1-a.x0).attr("height",a=>a.y1-a.y0).attr("class","treemapLeaf").attr("fill",a=>a.parent?w(a.parent.data.name):w(a.data.name)).attr("style",a=>(0,f.GX)({cssCompiledStyles:a.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",a=>a.parent?w(a.parent.data.name):w(a.data.name)).attr("stroke-width",3),F.append("clipPath").attr("id",(a,c)=>`clip-${b}-${c}`).append("rect").attr("width",a=>Math.max(0,a.x1-a.x0-4)).attr("height",a=>Math.max(0,a.y1-a.y0-4)),F.append("text").attr("class","treemapLabel").attr("x",a=>(a.x1-a.x0)/2).attr("y",a=>(a.y1-a.y0)/2).attr("style",a=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+y(a.data.name)+";"+(0,f.GX)({cssCompiledStyles:a.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(a,c)=>`url(#clip-${b}-${c})`).text(a=>a.data.name).each(function(a){let b=(0,l.Ltv)(this),c=a.x1-a.x0,d=a.y1-a.y0,e=b.node(),f=c-8,g=d-8;if(f<10||g<10)return void b.style("display","none");let h=parseInt(b.style("font-size"),10);for(;e.getComputedTextLength()>f&&h>8;)h--,b.style("font-size",`${h}px`);let i=Math.max(6,Math.min(28,Math.round(.6*h))),j=h+2+i;for(;j>g&&h>8&&(!((i=Math.max(6,Math.min(28,Math.round(.6*--h))))<6)||8!==h);)b.style("font-size",`${h}px`),j=h+2+i;b.style("font-size",`${h}px`),(e.getComputedTextLength()>f||h<8||g<h)&&b.style("display","none")}),!1!==m.showValues&&F.append("text").attr("class","treemapValue").attr("x",a=>(a.x1-a.x0)/2).attr("y",function(a){return(a.y1-a.y0)/2}).attr("style",a=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+y(a.data.name)+";"+(0,f.GX)({cssCompiledStyles:a.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(a,c)=>`url(#clip-${b}-${c})`).text(a=>a.value?h(a.value):"").each(function(a){let b=(0,l.Ltv)(this),c=this.parentNode;if(!c)return void b.style("display","none");let d=(0,l.Ltv)(c).select(".treemapLabel");if(d.empty()||"none"===d.style("display"))return void b.style("display","none");let e=parseFloat(d.style("font-size")),f=Math.max(6,Math.min(28,Math.round(.6*e)));b.style("font-size",`${f}px`);let g=(a.y1-a.y0)/2+e/2+2;b.attr("y",g);let h=a.x1-a.x0,i=a.y1-a.y0;b.node().getComputedTextLength()>h-8||g+f>i-4||f<6?b.style("display","none"):b.style("display",null)});let G=m.diagramPadding??8;(0,e.P)(s,G,"flowchart",m?.useMaxWidth||!1)},"draw"),s=(0,j.K2)(function(a,b){return b.db.getClasses()},"getClasses"),t={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},u={parser:q,get db(){return new m},renderer:{draw:r,getClasses:s},styles:(0,j.K2)(({treemap:a}={})=>{let b=(0,h.$t)(t,a);return`
  .treemapNode.section {
    stroke: ${b.sectionStrokeColor};
    stroke-width: ${b.sectionStrokeWidth};
    fill: ${b.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${b.leafStrokeColor};
    stroke-width: ${b.leafStrokeWidth};
    fill: ${b.leafFillColor};
  }
  .treemapLabel {
    fill: ${b.labelColor};
    font-size: ${b.labelFontSize};
  }
  .treemapValue {
    fill: ${b.valueColor};
    font-size: ${b.valueFontSize};
  }
  .treemapTitle {
    fill: ${b.titleColor};
    font-size: ${b.titleFontSize};
  }
  `},"getStyles")}}};